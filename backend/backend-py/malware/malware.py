import hash_db
import hashlib
import virus_total
import math 
import magic 
import os 

malicious_extentsion = ['.exe', '.src', '.js', '.vbs', '.ps1', '.docm', '.xlsm', '.zip', '.rar', '.iso', 'msi', 'pif', '.bat', '.hta', '.pptm']
def check_malware(file_content, file_name):
    hash = hash_file(file_content)
    if hash in hash_db.content_array:
        output = {
            'result ': True,
            'source' : "hash-db",
        }
        return output
    else :
        result1 = False
        if result1 == True:
            output = {
            'result ': True,
            'source' : "virus-total",
        }
            return output
        else:
            result2 = check_entropy(file_content)
            result3 = check_file_type(file_name)
            if result2 == True or result3 == True:
                output = {
                'result ': True,
                'source' : "entropy & file type"
                }
                hash_db.content_array.append(hash)
                return output 
                

def hash_file(file_content):
    hash_file = hashlib.sha256(file_content)
    hashed_file = hash_file.hexdigest()
    return hashed_file

def check_entropy(content):
    byte_count = [0]*256

    for b in content:
        byte_count[b] += 1

    entropy = 0
    for count in byte_count:
        if count == 0:
            continue
        p_x = count / len(content)
        entropy -= p_x  * math.log2(p_x)
    
    if entropy >= 6:
        return True 
    else :
        return False 

def check_file_type(name):
    file_type = magic.from_file(name)
    total_ext = name.split('.')
    if len(total_ext) > 2:
        return True
    if 'executable' in file_type.lower() or 'data' in file_type.lower():
        return True
    extension = total_ext[len(total_ext) - 1]
    if extension in malicious_extentsion:
        return True
    

file_name = "sample_file.txt"
with open(file_name, "rb") as f:
    file_content = f.read()

result = check_malware(file_content, file_name)

if result :
    print("malware: ", result)

else:
    print("not malware")