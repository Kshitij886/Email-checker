
import hashlib
import base64
from virus_total import virusTotal
import math 
import magic 
import re 
from hash_db import content_array
import os 

malicious_extentsion = ['.exe', '.src', '.js', '.vbs', '.ps1', '.docm', '.xlsm', '.zip', '.rar', '.iso', 'msi', 'pif', '.bat', '.hta', '.pptm']
def check_malware(attachment):
    hash = hash_file(attachment['content'])
    if hash in content_array:
        malware_type = check_malware_type(attachment['content'])
        output = {
            'status': True,
            "file" : attachment['filename']
        }
        return output
    else :
        result1 = virusTotal(hash)
        if result1 == True:
            malware_type = check_malware_type(attachment['content'])
            output = {
            'status': True,
            "file" : attachment['filename']
        }
            return output
        else:
            result2 = check_entropy(attachment['content'])
            result3 = check_file_type(attachment['filename'])
            if result2 == True or result3 == True:
                malware_type = check_malware_type(attachment['content'])
                output = {
                'status': True,
                "file" : attachment['filename']
                }
                content_array.append(hash)
                return output
    output = {
        "status" : False,
    }       
    return output
                

def hash_file(file_content):
    byte_file = buffer_string_to_bytes(file_content)
    hash_file = hashlib.sha256(byte_file)
    hashed_file = hash_file.hexdigest()
    return hashed_file

def check_entropy(content):
    byte_count = [0]*256

    for b in content:
        byte_count[b] += 1

    entropy = 0
    for count in byte_count:
        if count == 0:
            continue
        p_x = count / len(content)
        entropy -= p_x  * math.log2(p_x)
    
    if entropy >= 6:
        return True 
    else :
        return False 

def check_file_type(name):
    file_type = magic.from_file(name)
    total_ext = name.split('.')
    if len(total_ext) > 2:
        return True
    if 'executable' in file_type.lower() or 'data' in file_type.lower():
        return True
    extension = total_ext[len(total_ext) - 1]
    if extension != file_type:
        return True


def buffer_string_to_bytes(buffer_dict):
    if isinstance(buffer_dict, dict) and "data" in buffer_dict:
        return bytes(buffer_dict["data"])
    else:
        raise ValueError("Expected a dict with 'data' key")
    
def check_malware_type(content):
    data = content['data']